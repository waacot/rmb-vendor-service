/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (unset).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.rebindme.vendor.api;

import com.rebindme.vendor.model.Vendor;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-03T19:17:07.531568+02:00[Europe/Paris]")

@Validated
@Api(value = "vendor", description = "the vendor API")
public interface VendorApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "adds an vendor", nickname = "addVendor", notes = "Adds an vendor to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "vendor created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing vendor already exists") })
    @RequestMapping(value = "/vendor",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> addVendor(@ApiParam(value = "Vendor to add"  )  @Valid @RequestBody Vendor vendor) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "searches vendor", nickname = "searchVendor", notes = "By passing in the appropriate options, you can search for available vendor in the system ", response = Vendor.class, responseContainer = "List", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "search results matching criteria", response = Vendor.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/vendor",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Vendor>> searchVendor(@ApiParam(value = "pass an optional search string for looking up vendor") @Valid @RequestParam(value = "searchString", required = false) String searchString,@Min(0)@ApiParam(value = "number of records to skip for pagination") @Valid @RequestParam(value = "skip", required = false) Integer skip,@Min(0) @Max(50) @ApiParam(value = "maximum number of records to return") @Valid @RequestParam(value = "limit", required = false) Integer limit) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"dateCreated\" : \"2000-01-23\",  \"name\" : \"vendor\",  \"creatorId\" : \"d290f1ee-6c54-4b01-90e6-d701748f0851\",  \"description\" : \"here is the description of the reference object\",  \"id\" : \"d290f1ee-6c54-4b01-90e6-d701748f0851\",  \"updatorId\" : \"d290f1ee-6c54-4b01-90e6-d701748f0851\",  \"dateUpdated\" : \"2000-01-23\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
